//
//  CommandService用のParam型とResult型を定義したprotoファイル
//

// edition = "2023"; // TODO: pluginが対応したら有効化する
syntax = "proto3";

package command.v1;

import "buf/validate/validate.proto";
import "common/v1/error.proto";
import "common/v1/models.proto";
import "google/protobuf/timestamp.proto";

// 更新の種類
enum CRUD {
  CRUD_UNSPECIFIED = 0; // 不明
  CRUD_INSERT = 1; // 追加
  CRUD_UPDATE = 2; // 変更
  CRUD_DELETE = 3; // 削除
}

// CategoryService用のRequest/Response型
message CreateCategoryRequest {
  CRUD crud = 1 [(buf.validate.field).enum.const = 1]; // 更新の種類
  common.v1.CategoryName name = 2; // カテゴリ名
}

message CreateCategoryResponse {
  common.v1.Category category = 1; // 更新されたカテゴリ情報
  common.v1.Error error = 2; // 操作エラー情報（エラーがある場合のみ設定）
  google.protobuf.Timestamp timestamp = 3 [(buf.validate.field).timestamp = {}]; // 操作実行時刻
}

message UpdateCategoryRequest {
  CRUD crud = 1 [(buf.validate.field).enum.const = 2]; // 更新の種類
  Category category = 2; // カテゴリ情報

  message Category {
    common.v1.CategoryId id = 1; // 商品カテゴリ番号
    common.v1.CategoryName name = 2; // 商品カテゴリ名
  }
}

message UpdateCategoryResponse {
  common.v1.Category category = 1; // 更新されたカテゴリ情報
  common.v1.Error error = 2; // 操作エラー情報（エラーがある場合のみ設定）
  google.protobuf.Timestamp timestamp = 3 [(buf.validate.field).timestamp = {}]; // 操作実行時刻
}

message DeleteCategoryRequest {
  CRUD crud = 1 [(buf.validate.field).enum.const = 3]; // 更新の種類
  common.v1.CategoryId category_id = 2; // 商品カテゴリ番号
}

message DeleteCategoryResponse {
  common.v1.Category category = 1; // 更新されたカテゴリ情報
  common.v1.Error error = 2; // 操作エラー情報（エラーがある場合のみ設定）
  google.protobuf.Timestamp timestamp = 3 [(buf.validate.field).timestamp = {}]; // 操作実行時刻
}

// ProductService用のRequest/Response型
message CreateProductRequest {
  CRUD crud = 1 [(buf.validate.field).enum.const = 1]; // 更新の種類（CRUD_INSERT, CRUD_UPDATE, CRUD_DELETE）
  Product product = 2; // 商品情報

  message Product {
    common.v1.ProductName name = 1; // 商品名
    common.v1.ProductPrice price = 2; // 商品単価
    Category category = 3; // 商品カテゴリ情報

    message Category {
      common.v1.CategoryId id = 1; // 商品カテゴリ番号
      common.v1.CategoryName name = 2; // 商品カテゴリ名
    }
  }
}

message CreateProductResponse {
  common.v1.Product product = 1; // 更新された商品情報
  common.v1.Error error = 2; // 操作エラー情報（エラーがある場合のみ設定）
  google.protobuf.Timestamp timestamp = 3 [(buf.validate.field).timestamp = {}]; // 操作実行時刻
}

message UpdateProductRequest {
  CRUD crud = 1 [(buf.validate.field).enum.const = 2]; // 更新の種類
  Product product = 2; // 商品情報

  message Product {
    common.v1.ProductId id = 1; // 商品番号
    common.v1.ProductName name = 2; // 商品名
    common.v1.ProductPrice price = 3; // 商品単価
    common.v1.CategoryId category_id = 4; // 商品カテゴリid
  }
}

message UpdateProductResponse {
  common.v1.Product product = 1; // 更新された商品情報
  common.v1.Error error = 2; // 操作エラー情報（エラーがある場合のみ設定）
  google.protobuf.Timestamp timestamp = 3 [(buf.validate.field).timestamp = {}]; // 操作実行時刻
}

message DeleteProductRequest {
  common.v1.ProductId product_id = 1; // 商品番号
}

message DeleteProductResponse {
  common.v1.Product product = 1; // 更新された商品情報
  common.v1.Error error = 2; // 操作エラー情報（エラーがある場合のみ設定）
  google.protobuf.Timestamp timestamp = 3 [(buf.validate.field).timestamp = {}]; // 操作実行時刻
}

// 商品カテゴリコマンドサービス（書き込み専用）
// カテゴリのCRUD操作を提供するサービス
service CategoryService {
  // 新しい商品カテゴリを作成する
  rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryResponse);
  // 既存の商品カテゴリを更新する
  rpc UpdateCategory(UpdateCategoryRequest) returns (UpdateCategoryResponse);
  // 商品カテゴリを削除する
  rpc DeleteCategory(DeleteCategoryRequest) returns (DeleteCategoryResponse);
}

//  商品コマンドサービス型（書き込み専用）
// 商品のCRUD操作を提供するサービス
service ProductService {
  // 新しい商品を作成する
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
  // 既存の商品を更新する
  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse);
  // 商品を削除する
  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse);
}
